package com.epam.hr.domain.model;

import java.util.Objects;

public final class Resume extends Entity {
    private final long idUser;
    private final String name;
    private final String text;

    private Resume(Resume.Builder builder) {
        super(builder);
        this.idUser = builder.idUser;
        this.name = builder.name;
        this.text = builder.text;
    }

    public String getName() {
        return name;
    }

    public long getIdUser() {
        return idUser;
    }

    public String getText() {
        return text;
    }

    /* Autogenerated */
    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder("Resume{");
        sb.append("isValid=").append(isValid);
        sb.append(", idUser=").append(idUser);
        sb.append(", name='").append(name).append('\'');
        sb.append(", text='").append(text).append('\'');
        sb.append('}');
        return sb.toString();
    }

    /* Autogenerated */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        if (!super.equals(o)) {
            return false;
        }
        Resume resume = (Resume) o;
        return idUser == resume.idUser
                && Objects.equals(name, resume.name)
                && Objects.equals(text, resume.text);
    }

    /* Autogenerated */
    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), idUser, name, text);
    }

    public static class Builder extends Entity.Builder<Resume> {
        private final long idUser;
        private String name;
        private String text;

        public Builder(long idUser) {
            this(DEFAULT_ID, idUser);
        }

        public Builder(long id, long idUser) {
            super(id);
            this.idUser = idUser;
            this.name = DEFAULT_STRING_VALUE;
            this.text = DEFAULT_STRING_VALUE;
        }

        public Builder(Resume resume) {
            super(resume);
            idUser = resume.getIdUser();
            name = resume.getName();
            text = resume.getText();
        }

        public Builder setName(String name) {
            this.name = name;
            return this;
        }

        public Builder setText(String text) {
            this.text = text;
            return this;
        }

        @Override
        public Resume build(boolean isValid) {
            this.isValid = isValid;
            return new Resume(this);
        }
    }
}

